# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-06-25 10:22
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('email', models.EmailField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z]+$', 'Email must contain at least one @ and .')], verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=40, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='Last Name')),
                ('user_type', models.CharField(choices=[('Job Seeker', 'Job Seeker'), ('Company', 'Company')], default='Job Seeker', max_length=20, verbose_name='User Type')),
                ('otp', models.CharField(blank=True, max_length=7, null=True, verbose_name='OTP')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('image', models.URLField(blank=True, null=True, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'User',
            },
        ),
        migrations.CreateModel(
            name='AreaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=50, verbose_name='Area')),
            ],
        ),
        migrations.CreateModel(
            name='IndustryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_type', models.CharField(max_length=60, verbose_name='Industry Type')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDetailModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('professional_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profestional Title')),
                ('professional_description', models.TextField(blank=True, null=True, verbose_name='Professional Description')),
                ('paypal_account_id', models.CharField(blank=True, max_length=65, null=True, verbose_name='Paypal Account Id')),
                ('country', models.CharField(blank=True, max_length=40, null=True, verbose_name='Country Name')),
                ('timezone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Timezone')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Postal Vode')),
                ('city', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='city')),
                ('mobile', models.CharField(blank=True, max_length=18, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Mobile number must be integer')], verbose_name='Phone Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_personal_detail', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Profession')),
            ],
        ),
        migrations.CreateModel(
            name='SpeakingLanguageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=40, verbose_name='Language Name')),
            ],
        ),
        migrations.CreateModel(
            name='ToolsAndLanguageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tools and Language')),
            ],
        ),
        migrations.CreateModel(
            name='UserAreaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='area_name', to='app.AreaModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_area', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEducationModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schoolName', models.CharField(blank=True, max_length=250, null=True, verbose_name='School or Collage Name')),
                ('university_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='University name')),
                ('board', models.CharField(blank=True, max_length=40, null=True, verbose_name='Boards')),
                ('percentage', models.FloatField(blank=True, null=True, verbose_name='percentage')),
                ('yop', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{4,5}$', 'Year must be integer')], verbose_name='Year Of Passing')),
                ('course', models.CharField(blank=True, max_length=50, null=True, verbose_name='Course')),
                ('stream', models.CharField(blank=True, max_length=40, null=True, verbose_name='Stream')),
                ('qualification', models.CharField(blank=True, max_length=50, null=True, verbose_name='Qualification Name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_education', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEmploymentHistoryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='company name')),
                ('designation', models.CharField(blank=True, max_length=30, null=True, verbose_name='Designation')),
                ('fromMonth', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='From Month ')),
                ('fromYear', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{4,5}$', 'Year must be integer')], verbose_name='Frrom Year')),
                ('toMonth', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='To Month')),
                ('toYear', models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{4,5}$', 'Year must be integer')], verbose_name='To Year')),
                ('currentWorking', models.BooleanField(default=False, verbose_name='Current Working')),
                ('city', models.CharField(blank=True, max_length=40, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='City of Company')),
                ('country', models.CharField(blank=True, max_length=40, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z-]+$', 'Only character is allowed')], verbose_name='Country of Comapany')),
                ('jobDescription', models.TextField(blank=True, null=True, verbose_name='Description of Job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_employment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserIndustryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='industry_name', to='app.IndustryModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_industry', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLanguageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0, verbose_name='Language Rating')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_language', to=settings.AUTH_USER_MODEL)),
                ('userLanguage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_language_name', to='app.SpeakingLanguageModel')),
            ],
        ),
        migrations.CreateModel(
            name='UserToolsAndLanguageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, default=0, null=True, verbose_name='Rating of Skill')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_name', to='app.ToolsAndLanguageModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_skill', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkingHourModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_hour', models.CharField(max_length=15, verbose_name='Working Hour in a Week')),
            ],
        ),
        migrations.AddField(
            model_name='personaldetailmodel',
            name='work_hour',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_working_hour_in_a_week', to='app.WorkingHourModel'),
        ),
    ]
