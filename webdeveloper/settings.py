"""
Django settings for webdeveloper project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import datetime


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y-itqr*==+5fkkhgabhcj(1m+5gv8z9!3+xg(-48h+huez3*w+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'material.theme.cyan',
    'material',
    'material.admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',  
    'django.contrib.postgres',  
]


THIRD_PARTIES  = [
    'templated_email',
    'rest_framework',
    'corsheaders',
    'social_django',
    'rest_framework_social_oauth2',
    'djrichtextfield',
    
]

APPLICATIONS = [
    'app',
    'website',
    'static_content_management',
    'channels',
]

INSTALLED_APPS += THIRD_PARTIES + APPLICATIONS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django_otp.middleware.OTPMiddleware',

]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'webdeveloper.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                #OAUTH
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'webdeveloper.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': "webdeveloper",
        #'NAME': "I_need_web_developer",
        'USER':'postgres',
        'PASSWORD':"postgres",
        #'PASSWORD':"surya  123",
        'HOST':'13.250.224.209',
        #'HOST':'127.0.0.1',
        'PORT':'5432',
    }
}
#channel Layer
ASGI_APPLICATION = "website.routing.application"
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

AUTH_USER_MODEL = 'app.MyUser'
# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        # 'oauth2_provider.contrib.rest_framework.OAuth2Authentication',  # django-oauth-toolkit >= 1.0.0
        'rest_framework_social_oauth2.authentication.SocialAuthentication',
    ),
}

# DJRICHTEXTFIELD_CONFIG = {
#     'js': ['//cdn.ckeditor.com/4.4.4/standard/ckeditor.js'],
#     'init_template': 'djrichtextfield/init/ckeditor.js',
#     'settings': {

#         'width': 'auto',
#         'height': 'auto'
#     }
# }
DJRICHTEXTFIELD_CONFIG = { 
    'js': ['//tinymce.cachefly.net/4.1/tinymce.min.js'], 
    'init_template': 'djrichtextfield/init/tinymce.js', 
    'settings': { 
        'menubar': False, 
        'plugins': 'link image', 
        'toolbar': 'bold italic | link image | removeformat',
         'width': 'auto',
         'height':'auto'
         } 
         }

# # AUTHENTICATION_BACKENDS = (
# #
# #     # Others auth providers (e.g. Google, OpenId, etc)
# #
# #     # Facebook OAuth2
# #     'social_core.backends.facebook.FacebookAppOAuth2',
# #     'social_core.backends.facebook.FacebookOAuth2',
# #
# #     #Google OAuth2
# #     'social_core.backends.google.GoogleOAuth2',
# #     'social_core.backends.google.GoogleOpenId',  # for Google authentication
# #     'social_core.backends.open_id.OpenIdAuth',  # for Google authentication
# #
# #     #LinkedIn OAuth2
# #     'social.backends.linkedin.LinkedinOAuth2',
# #
# #     # django-rest-framework-social-oauth2
# #     'rest_framework_social_oauth2.backends.DjangoOAuth2',
# #
# #     # Django
# #     'django.contrib.auth.backends.ModelBackend',
# #
# #
# # )
# #Google Key and secret
# SOCIAL_AUTH_GOOGLE_OAUTH2_KEY='644728388887-24r7gc21b2efe6pkfnadvm56rs0br97e.apps.googleusercontent.com'
# SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET='tim7Q1L0VXtMxmcGXoApRelc'

CLOUDINARY = {
   'cloud_name': 'nutan',
   'api_key': '456555743618621',
   'api_secret': '_i9Ipg0pdRdEDKtHLnRYHRYADpo',
   'secure':False,
}


JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=15),
    'JWT_ALGORITHM': 'HS256',
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': False,
    'JWT_LEEWAY': 0,
    'JWT_AUDIENCE': None,
    'JWT_ISSUER': None,
    'JWT_ALLOW_REFRESH': True,
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
    'JWT_PAYLOAD_GET_USER_ID_HANDLER': 'jwt_auth.utils.jwt_get_user_id_from_payload_handler',
}


EMAIL_HOST='smtp.gmail.com'
EMAIL_PORT=587
EMAIL_HOST_USER='py-nutangupta@mobiloitte.com'
EMAIL_HOST_PASSWORD='9839451320'
EMAIL_USE_TLS=True

TEMPLATED_EMAIL_BACKEND = 'templated_email.backends.vanilla_django.TemplateBackend'

# You can use a shortcut version
TEMPLATED_EMAIL_BACKEND = 'templated_email.backends.vanilla_django'

# You can also use a class directly
from templated_email.backends.vanilla_django import TemplateBackend
TEMPLATED_EMAIL_BACKEND = TemplateBackend

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
